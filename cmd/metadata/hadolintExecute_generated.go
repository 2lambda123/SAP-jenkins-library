// Code generated by piper's step-generator. DO NOT EDIT.

package metadata

import (
	"os"
	"github.com/SAP/jenkins-library/pkg/config"
)

// retrieve step metadata
func HadolintExecuteMetadata() config.StepData {
	var theMetaData = config.StepData{
		Metadata: config.StepMetadata{
			Name:    "hadolintExecute",
			Aliases: []config.Alias{},
			Description: "Executes the Haskell Dockerfile Linter which is a smarter Dockerfile linter that helps you build [best practice](https://docs.docker.com/develop/develop-images/dockerfile_best-practices/) Docker images.",
		},
		Spec: config.StepSpec{
			Inputs: config.StepInputs{
				Secrets: []config.StepSecrets{
					{Name: "configurationCredentialsId",Description: "Jenkins 'Username with password' credentials ID containing username/password for access to your remote configuration file.",Type: "jenkins",
					}, 
				},
				Parameters: []config.StepParameters{
					{
						Name:      "configurationUrl",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_configurationUrl"),
					},
					{
						Name:      "configurationUsername",
						ResourceRef: []config.ResourceReference{
							{
								Name:"configurationCredentialsId",
								Param: "username",
								Type: "secret",
							},
                        
							{
								Name:"hadolintConfigSecretName",
								Type: "vaultSecret",
								Default: "hadolintConfig",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "username"},},
						Default:   os.Getenv("PIPER_configurationUsername"),
					},
					{
						Name:      "configurationPassword",
						ResourceRef: []config.ResourceReference{
							{
								Name:"configurationCredentialsId",
								Param: "password",
								Type: "secret",
							},
                        
							{
								Name:"hadolintConfigSecretName",
								Type: "vaultSecret",
								Default: "hadolintConfig",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "password"},},
						Default:   os.Getenv("PIPER_configurationPassword"),
					},
					{
						Name:      "dockerFile",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "dockerfile"},},
						Default:   `./Dockerfile`,
					},
					{
						Name:      "configurationFile",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `.hadolint.yaml`,
					},
					{
						Name:      "reportFile",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `hadolint.xml`,
					},
					{
						Name:      "customTlsCertificateLinks",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{},
					},
				},
			},
			Containers: []config.Container{
				{Name: "hadolint",Image: "hadolint/hadolint:latest-alpine",
				}, 
			},
			
		},
	}
	return theMetaData
}
