// Code generated by piper's step-generator. DO NOT EDIT.

package metadata

import (
	"os"
	"github.com/SAP/jenkins-library/pkg/config"
)

// retrieve step metadata
func GithubCommentIssueMetadata() config.StepData {
	var theMetaData = config.StepData{
		Metadata: config.StepMetadata{
			Name:    "githubCommentIssue",
			Aliases: []config.Alias{},
			Description: "Comment on GitHub issues and pull requests.",
		},
		Spec: config.StepSpec{
			Inputs: config.StepInputs{
				Secrets: []config.StepSecrets{
					{Name: "githubTokenCredentialsId",Description: "Jenkins 'Secret text' credentials ID containing token to authenticate to GitHub.",Type: "jenkins",
					}, 
				},
				Parameters: []config.StepParameters{
					{
						Name:      "apiUrl",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{{Name: "githubApiUrl"},},
						Default:   `https://api.github.com`,
					},
					{
						Name:      "body",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_body"),
					},
					{
						Name:      "number",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "int",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   0,
					},
					{
						Name:      "owner",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "github/owner",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{{Name: "githubOrg"},},
						Default:   os.Getenv("PIPER_owner"),
					},
					{
						Name:      "repository",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "github/repository",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{{Name: "githubRepo"},},
						Default:   os.Getenv("PIPER_repository"),
					},
					{
						Name:      "token",
						ResourceRef: []config.ResourceReference{
							{
								Name:"githubTokenCredentialsId",
								Type: "secret",
							},
                        
							{
								Name:"githubVaultSecretName",
								Type: "vaultSecret",
								Default: "github",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{{Name: "githubToken"},{Name: "access_token"},},
						Default:   os.Getenv("PIPER_token"),
					},
				},
			},
			
		},
	}
	return theMetaData
}
