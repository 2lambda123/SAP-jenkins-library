// Code generated by piper's step-generator. DO NOT EDIT.

package metadata

import (
	"os"
	"github.com/SAP/jenkins-library/pkg/config"
)

// retrieve step metadata
func AbapEnvironmentCreateSystemMetadata() config.StepData {
	var theMetaData = config.StepData{
		Metadata: config.StepMetadata{
			Name:    "abapEnvironmentCreateSystem",
			Aliases: []config.Alias{},
			Description: "Creates a SAP BTP ABAP Environment system (aka Steampunk system)",
		},
		Spec: config.StepSpec{
			Inputs: config.StepInputs{
				Secrets: []config.StepSecrets{
					{Name: "cfCredentialsId",Description: "Jenkins 'Username with password' credentials ID containing user and password to authenticate to the Cloud Foundry API.",Type: "jenkins",Aliases: []config.Alias{ {Name: "cloudFoundry/credentialsId", Deprecated: false}, },
					}, 
				},
				Parameters: []config.StepParameters{
					{
						Name:      "cfApiEndpoint",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{{Name: "cloudFoundry/apiEndpoint"},},
						Default:   `https://api.cf.eu10.hana.ondemand.com`,
					},
					{
						Name:      "username",
						ResourceRef: []config.ResourceReference{
							{
								Name:"cfCredentialsId",
								Param: "username",
								Type: "secret",
							},
                        
							{
								Name:"cloudfoundryVaultSecretName",
								Type: "vaultSecret",
								Default: "cloudfoundry-$(org)-$(space)",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_username"),
					},
					{
						Name:      "password",
						ResourceRef: []config.ResourceReference{
							{
								Name:"cfCredentialsId",
								Param: "password",
								Type: "secret",
							},
                        
							{
								Name:"cloudfoundryVaultSecretName",
								Type: "vaultSecret",
								Default: "cloudfoundry-$(org)-$(space)",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_password"),
					},
					{
						Name:      "cfOrg",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{{Name: "cloudFoundry/org"},},
						Default:   os.Getenv("PIPER_cfOrg"),
					},
					{
						Name:      "cfSpace",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{{Name: "cloudFoundry/space"},},
						Default:   os.Getenv("PIPER_cfSpace"),
					},
					{
						Name:      "cfService",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "cloudFoundry/service"},},
						Default:   os.Getenv("PIPER_cfService"),
					},
					{
						Name:      "cfServicePlan",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "cloudFoundry/servicePlan"},},
						Default:   os.Getenv("PIPER_cfServicePlan"),
					},
					{
						Name:      "cfServiceInstance",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "cloudFoundry/serviceInstance"},},
						Default:   os.Getenv("PIPER_cfServiceInstance"),
					},
					{
						Name:      "serviceManifest",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "cloudFoundry/serviceManifest"},{Name: "cfServiceManifest"},},
						Default:   os.Getenv("PIPER_serviceManifest"),
					},
					{
						Name:      "abapSystemAdminEmail",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_abapSystemAdminEmail"),
					},
					{
						Name:      "abapSystemDescription",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `Test system created by an automated pipeline`,
					},
					{
						Name:      "abapSystemIsDevelopmentAllowed",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   true,
					},
					{
						Name:      "abapSystemID",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `H02`,
					},
					{
						Name:      "abapSystemSizeOfPersistence",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "int",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   0,
					},
					{
						Name:      "abapSystemSizeOfRuntime",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "int",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   0,
					},
					{
						Name:      "addonDescriptorFileName",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_addonDescriptorFileName"),
					},
					{
						Name:      "includeAddon",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   false,
					},
				},
			},
			Containers: []config.Container{
				{Name: "cf",Image: "ppiper/cf-cli:v12",
				}, 
			},
			
		},
	}
	return theMetaData
}
