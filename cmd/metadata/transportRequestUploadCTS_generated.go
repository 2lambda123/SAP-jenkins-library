// Code generated by piper's step-generator. DO NOT EDIT.

package metadata

import (
	"os"
	"github.com/SAP/jenkins-library/pkg/config"
)

// retrieve step metadata
func TransportRequestUploadCTSMetadata() config.StepData {
	var theMetaData = config.StepData{
		Metadata: config.StepMetadata{
			Name:    "transportRequestUploadCTS",
			Aliases: []config.Alias{{Name: "transportRequestUploadFile", Deprecated: false},},
			Description: "This step uploads an UI5 application to the SAPUI5 ABAP repository.",
		},
		Spec: config.StepSpec{
			Inputs: config.StepInputs{
				Secrets: []config.StepSecrets{
					{Name: "uploadCredentialsId",Description: "Jenkins 'Username with password' credentials ID containing user and password to authenticate against the ABAP system.",Type: "jenkins",Aliases: []config.Alias{ {Name: "changeManagement/credentialsId", Deprecated: false}, },
					}, 
				},
				Parameters: []config.StepParameters{
					{
						Name:      "description",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "applicationDescription"},},
						Default:   `Deployed with Piper based on SAP Fiori tools`,
					},
					{
						Name:      "endpoint",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "changeManagement/endpoint"},{Name: "changeManagement/cts/endpoint"},},
						Default:   os.Getenv("PIPER_endpoint"),
					},
					{
						Name:      "client",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "changeManagement/client"},{Name: "changeManagement/cts/client"},},
						Default:   os.Getenv("PIPER_client"),
					},
					{
						Name:      "username",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_username"),
					},
					{
						Name:      "password",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_password"),
					},
					{
						Name:      "applicationName",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_applicationName"),
					},
					{
						Name:      "abapPackage",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_abapPackage"),
					},
					{
						Name:      "osDeployUser",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "changeManagement/osDeployUser"},{Name: "changeManagement/cts/osDeployUser"},},
						Default:   `node`,
					},
					{
						Name:      "deployConfigFile",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "changeManagement/deployConfigFile"},{Name: "changeManagement/cts/deployConfigFile"},},
						Default:   `ui5-deploy.yaml`,
					},
					{
						Name:      "transportRequestId",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "custom/transportRequestId",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_transportRequestId"),
					},
					{
						Name:      "deployToolDependencies",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "changeManagement/deployToolDependencies"},{Name: "changeManagement/cts/deployToolDependencies"},},
						Default:   []string{`@ui5/cli`, `@sap/ux-ui5-tooling`, `@ui5/logger`, `@ui5/fs`},
					},
					{
						Name:      "npmInstallOpts",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "changeManagement/npmInstallOpts"},{Name: "changeManagement/cts/npmInstallOpts"},},
						Default:   []string{},
					},
				},
			},
			Containers: []config.Container{
				{Name: "fiori-client",Image: "node",
				}, 
			},
			Outputs: config.StepOutputs{
				Resources: []config.StepResources{
					{
						Name: "commonPipelineEnvironment",
						Type: "piperEnvironment",
						Parameters: []map[string]interface{}{
							{"name": "custom/transportRequestId",},
						},
					},
				},
			},
		},
	}
	return theMetaData
}
