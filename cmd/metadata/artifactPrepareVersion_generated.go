// Code generated by piper's step-generator. DO NOT EDIT.

package metadata

import (
	"os"
	"github.com/SAP/jenkins-library/pkg/config"
)

// retrieve step metadata
func ArtifactPrepareVersionMetadata() config.StepData {
	var theMetaData = config.StepData{
		Metadata: config.StepMetadata{
			Name:    "artifactPrepareVersion",
			Aliases: []config.Alias{{Name: "artifactSetVersion", Deprecated: false},{Name: "setVersion", Deprecated: true},},
			Description: "Prepares and potentially updates the artifact's version before building the artifact.",
		},
		Spec: config.StepSpec{
			Inputs: config.StepInputs{
				Secrets: []config.StepSecrets{
					{Name: "gitHttpsCredentialsId",Description: "Jenkins 'Username with password' credentials ID containing username/password for http access to your git repository.",Type: "jenkins",
					}, 
					{Name: "gitSshKeyCredentialsId",Description: "Jenkins 'SSH Username with private key' credentials ID ssh key for accessing your git repository. You can find details about how to generate an ssh key in the [GitHub documentation](https://docs.github.com/en/enterprise/2.15/user/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent).",Type: "jenkins",Aliases: []config.Alias{ {Name: "gitCredentialsId", Deprecated: true}, },
					}, 
				},
				Parameters: []config.StepParameters{
					{
						Name:      "additionalTargetTools",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{},
					},
					{
						Name:      "additionalTargetDescriptors",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{},
					},
					{
						Name:      "buildTool",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_buildTool"),
					},
					{
						Name:      "commitUserName",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "gitUserName"},},
						Default:   `Project Piper`,
					},
					{
						Name:      "customVersionField",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_customVersionField"),
					},
					{
						Name:      "customVersionSection",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_customVersionSection"),
					},
					{
						Name:      "customVersioningScheme",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `maven`,
					},
					{
						Name:      "dockerVersionSource",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_dockerVersionSource"),
					},
					{
						Name:      "fetchCoordinates",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   false,
					},
					{
						Name:      "filePath",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_filePath"),
					},
					{
						Name:      "globalSettingsFile",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "maven/globalSettingsFile"},},
						Default:   os.Getenv("PIPER_globalSettingsFile"),
					},
					{
						Name:      "includeCommitId",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   true,
					},
					{
						Name:      "isOptimizedAndScheduled",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "custom/isOptimizedAndScheduled",
							},
                        },
						Scope:     []string{"PARAMETERS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   false,
					},
					{
						Name:      "m2Path",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "maven/m2Path"},},
						Default:   os.Getenv("PIPER_m2Path"),
					},
					{
						Name:      "password",
						ResourceRef: []config.ResourceReference{
							{
								Name:"gitHttpsCredentialsId",
								Param: "password",
								Type: "secret",
							},
                        
							{
								Name:"gitHttpsCredentialVaultSecretName",
								Type: "vaultSecret",
								Default: "gitHttpsCredential",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "access_token"},},
						Default:   os.Getenv("PIPER_password"),
					},
					{
						Name:      "projectSettingsFile",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "maven/projectSettingsFile"},},
						Default:   os.Getenv("PIPER_projectSettingsFile"),
					},
					{
						Name:      "shortCommitId",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   false,
					},
					{
						Name:      "tagPrefix",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `build_`,
					},
					{
						Name:      "unixTimestamp",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   false,
					},
					{
						Name:      "username",
						ResourceRef: []config.ResourceReference{
							{
								Name:"gitHttpsCredentialsId",
								Param: "username",
								Type: "secret",
							},
                        
							{
								Name:"gitHttpsCredentialVaultSecretName",
								Type: "vaultSecret",
								Default: "gitHttpsCredential",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_username"),
					},
					{
						Name:      "versioningTemplate",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_versioningTemplate"),
					},
					{
						Name:      "versioningType",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `cloud`,
					},
					{
						Name:      "customTlsCertificateLinks",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{},
						Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "buildTool", Value: "maven" },  { Name: "buildTool", Value: "gradle" }, } }, },
					},
				},
			},
			Containers: []config.Container{
				{Image: "maven:3.6-jdk-8",Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "buildTool", Value: "maven" }, } }, },
				}, 
			},
			Outputs: config.StepOutputs{
				Resources: []config.StepResources{
					{
						Name: "commonPipelineEnvironment",
						Type: "piperEnvironment",
						Parameters: []map[string]interface{}{
							{"name": "artifactVersion",},
							{"name": "originalArtifactVersion",},
							{"name": "artifactId",},
							{"name": "groupId",},
							{"name": "packaging",},
							{"name": "git/commitId",},
							{"name": "git/headCommitId",},
							{"name": "git/commitMessage",},
						},
					},
				},
			},
		},
	}
	return theMetaData
}
