// Code generated by piper's step-generator. DO NOT EDIT.

package metadata

import (
	"github.com/SAP/jenkins-library/pkg/config"
)

// retrieve step metadata
func BatsExecuteTestsMetadata() config.StepData {
	var theMetaData = config.StepData{
		Metadata: config.StepMetadata{
			Name:    "batsExecuteTests",
			Aliases: []config.Alias{},
			Description: "This step executes tests using the [Bash Automated Testing System - bats-core](https://github.com/bats-core/bats-core).",
		},
		Spec: config.StepSpec{
			Inputs: config.StepInputs{
				Resources: []config.StepResources{
					{Name: "tests",Type: "stash",
					},
				},
				Parameters: []config.StepParameters{
					{
						Name:      "outputFormat",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `junit`,
					},
					{
						Name:      "repository",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `https://github.com/bats-core/bats-core.git`,
					},
					{
						Name:      "testPackage",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `piper-bats`,
					},
					{
						Name:      "testPath",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `src/test`,
					},
					{
						Name:      "envVars",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{},
					},
				},
			},
			Containers: []config.Container{
				{Name: "bats",Image: "node:lts-buster",WorkingDir: "/home/node",Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "outputFormat", Value: "junit" }, } }, },
				}, 
			},
			Outputs: config.StepOutputs{
				Resources: []config.StepResources{
					{
						Name: "influx",
						Type: "influx",
						Parameters: []map[string]interface{}{
							{"name": "step_data","fields": []map[string]string{ {"name": "bats"}, },},
						},
					},
				},
			},
		},
	}
	return theMetaData
}
