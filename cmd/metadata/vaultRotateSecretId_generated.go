// Code generated by piper's step-generator. DO NOT EDIT.

package metadata

import (
	"os"
	"github.com/SAP/jenkins-library/pkg/config"
)

// retrieve step metadata
func VaultRotateSecretIdMetadata() config.StepData {
	var theMetaData = config.StepData{
		Metadata: config.StepMetadata{
			Name:    "vaultRotateSecretId",
			Aliases: []config.Alias{},
			Description: "Rotate Vault AppRole Secret ID",
		},
		Spec: config.StepSpec{
			Inputs: config.StepInputs{
				Parameters: []config.StepParameters{
					{
						Name:      "secretStore",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `jenkins`,
					},
					{
						Name:      "jenkinsUrl",
						ResourceRef: []config.ResourceReference{
							{
								Name:"jenkinsVaultSecretName",
								Type: "vaultSecret",
								Default: "jenkins",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "url"},},
						Default:   os.Getenv("PIPER_jenkinsUrl"),
					},
					{
						Name:      "jenkinsCredentialDomain",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `_`,
					},
					{
						Name:      "jenkinsUsername",
						ResourceRef: []config.ResourceReference{
							{
								Name:"jenkinsVaultSecretName",
								Type: "vaultSecret",
								Default: "jenkins",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "userId"},},
						Default:   os.Getenv("PIPER_jenkinsUsername"),
					},
					{
						Name:      "jenkinsToken",
						ResourceRef: []config.ResourceReference{
							{
								Name:"jenkinsVaultSecretName",
								Type: "vaultSecret",
								Default: "jenkins",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "token"},},
						Default:   os.Getenv("PIPER_jenkinsToken"),
					},
					{
						Name:      "vaultAppRoleSecretTokenCredentialsId",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_vaultAppRoleSecretTokenCredentialsId"),
					},
					{
						Name:      "vaultServerUrl",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_vaultServerUrl"),
					},
					{
						Name:      "vaultNamespace",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_vaultNamespace"),
					},
					{
						Name:      "daysBeforeExpiry",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "int",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   15,
					},
					{
						Name:      "adoOrganization",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_adoOrganization"),
					},
					{
						Name:      "adoPersonalAccessToken",
						ResourceRef: []config.ResourceReference{
							{
								Name:"azureDevOpsVaultSecretName",
								Type: "vaultSecret",
								Default: "azure-dev-ops",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "token"},},
						Default:   os.Getenv("PIPER_adoPersonalAccessToken"),
					},
					{
						Name:      "adoProject",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_adoProject"),
					},
					{
						Name:      "adoPipelineId",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "int",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   0,
					},
					{
						Name:      "githubToken",
						ResourceRef: []config.ResourceReference{
							{
								Name:"githubVaultSecretName",
								Type: "vaultSecret",
								Default: "github",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "access_token"},{Name: "token"},},
						Default:   os.Getenv("PIPER_githubToken"),
					},
					{
						Name:      "githubApiUrl",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `https://api.github.com`,
					},
					{
						Name:      "owner",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "github/owner",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_owner"),
					},
					{
						Name:      "repository",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "github/repository",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_repository"),
					},
				},
			},
			
		},
	}
	return theMetaData
}
