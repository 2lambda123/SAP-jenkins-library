// Code generated by piper's step-generator. DO NOT EDIT.

package metadata

import (
	"os"
	"github.com/SAP/jenkins-library/pkg/config"
)

// retrieve step metadata
func WhitesourceExecuteScanMetadata() config.StepData {
	var theMetaData = config.StepData{
		Metadata: config.StepMetadata{
			Name:    "whitesourceExecuteScan",
			Aliases: []config.Alias{},
			Description: "Execute a Mend (formerly known as WhiteSource) scan",
		},
		Spec: config.StepSpec{
			Inputs: config.StepInputs{
				Secrets: []config.StepSecrets{
					{Name: "userTokenCredentialsId",Description: "Jenkins 'Secret text' credentials ID containing Whitesource user token.",Type: "jenkins",Aliases: []config.Alias{ {Name: "whitesourceUserTokenCredentialsId", Deprecated: false},  {Name: "whitesource/userTokenCredentialsId", Deprecated: true}, },
					}, 
					{Name: "orgAdminUserTokenCredentialsId",Description: "Jenkins 'Secret text' credentials ID containing Whitesource org admin token.",Type: "jenkins",Aliases: []config.Alias{ {Name: "whitesourceOrgAdminUserTokenCredentialsId", Deprecated: false},  {Name: "whitesource/orgAdminUserTokenCredentialsId", Deprecated: true}, },
					}, 
					{Name: "dockerConfigJsonCredentialsId",Description: "Jenkins 'Secret file' credentials ID containing Docker config.json (with registry credential(s)). You can find more details about the Docker credentials in the [Docker documentation](https://docs.docker.com/engine/reference/commandline/login/).",Type: "jenkins",Aliases: []config.Alias{ {Name: "dockerCredentialsId", Deprecated: true}, },
					}, 
					{Name: "githubTokenCredentialsId",Description: "Jenkins 'Secret text' credentials ID containing token to authenticate to GitHub.",Type: "jenkins",
					}, 
					{Name: "golangPrivateModulesGitTokenCredentialsId",Description: "Jenkins 'Username with password' credentials ID containing username/password for http access to your git repos where your go private modules are stored.",Type: "jenkins",
					}, 
				},
				Resources: []config.StepResources{
					{Name: "buildDescriptor",Type: "stash",
					},
					{Name: "opensourceConfiguration",Type: "stash",
					},
					{Name: "checkmarx",Type: "stash",
					},
					{Name: "checkmarxOne",Type: "stash",
					},
				},
				Parameters: []config.StepParameters{
					{
						Name:      "agentDownloadUrl",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `https://github.com/whitesource/unified-agent-distribution/releases/latest/download/wss-unified-agent.jar`,
					},
					{
						Name:      "agentFileName",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `wss-unified-agent.jar`,
					},
					{
						Name:      "agentParameters",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{},
					},
					{
						Name:      "agentUrl",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "whitesourceAgentUrl"},},
						Default:   `https://saas.whitesourcesoftware.com/agent`,
					},
					{
						Name:      "aggregateVersionWideReport",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   false,
					},
					{
						Name:      "assessmentFile",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `hs-assessments.yaml`,
					},
					{
						Name:      "buildDescriptorExcludeList",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{`unit-tests/pom.xml`, `integration-tests/pom.xml`},
					},
					{
						Name:      "buildDescriptorFile",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_buildDescriptorFile"),
					},
					{
						Name:      "buildTool",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "buildTool",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_buildTool"),
					},
					{
						Name:      "configFilePath",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `./wss-unified-agent.config`,
					},
					{
						Name:      "containerRegistryPassword",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "container/repositoryPassword",
							},
                        
							{
								Name:"commonPipelineEnvironment",
								Param: "custom/repositoryPassword",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_containerRegistryPassword"),
					},
					{
						Name:      "containerRegistryUser",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "container/repositoryUsername",
							},
                        
							{
								Name:"commonPipelineEnvironment",
								Param: "custom/repositoryUsername",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_containerRegistryUser"),
					},
					{
						Name:      "createProductFromPipeline",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   true,
					},
					{
						Name:      "customScanVersion",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_customScanVersion"),
					},
					{
						Name:      "cvssSeverityLimit",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `-1`,
					},
					{
						Name:      "scanPath",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `.`,
					},
					{
						Name:      "dockerConfigJSON",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "custom/dockerConfigJSON",
							},
                        
							{
								Name:"dockerConfigJsonCredentialsId",
								Type: "secret",
							},
                        
							{
								Name:"dockerConfigFileVaultSecretName",
								Type: "vaultSecretFile",
								Default: "docker-config",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_dockerConfigJSON"),
					},
					{
						Name:      "emailAddressesOfInitialProductAdmins",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{},
					},
					{
						Name:      "excludes",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{},
					},
					{
						Name:      "failOnSevereVulnerabilities",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   true,
					},
					{
						Name:      "includes",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{},
					},
					{
						Name:      "installCommand",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_installCommand"),
					},
					{
						Name:      "jreDownloadUrl",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "whitesource/jreDownloadUrl", Deprecated: true},},
						Default:   `https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.2/sapmachine-jre-11.0.2_linux-x64_bin.tar.gz`,
					},
					{
						Name:      "licensingVulnerabilities",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   true,
					},
					{
						Name:      "orgToken",
						ResourceRef: []config.ResourceReference{
							{
								Name:"orgAdminUserTokenCredentialsId",
								Type: "secret",
							},
                        
							{
								Name:"whitesourceVaultSecret",
								Type: "vaultSecret",
								Default: "whitesource",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{{Name: "whitesourceOrgToken"},{Name: "whitesource/orgToken", Deprecated: true},},
						Default:   os.Getenv("PIPER_orgToken"),
					},
					{
						Name:      "productName",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "whitesourceProductName"},{Name: "whitesource/productName", Deprecated: true},},
						Default:   os.Getenv("PIPER_productName"),
					},
					{
						Name:      "productToken",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "whitesourceProductToken"},{Name: "whitesource/productToken", Deprecated: true},},
						Default:   os.Getenv("PIPER_productToken"),
					},
					{
						Name:      "version",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "artifactVersion",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "productVersion"},{Name: "whitesourceProductVersion"},{Name: "whitesource/productVersion", Deprecated: true},},
						Default:   os.Getenv("PIPER_version"),
					},
					{
						Name:      "projectName",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "whitesourceProjectName"},},
						Default:   os.Getenv("PIPER_projectName"),
					},
					{
						Name:      "projectToken",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_projectToken"),
					},
					{
						Name:      "reporting",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   true,
					},
					{
						Name:      "scanImage",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "container/imageNameTag",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_scanImage"),
					},
					{
						Name:      "scanImageRegistryUrl",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "container/registryUrl",
							},
                        },
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_scanImageRegistryUrl"),
					},
					{
						Name:      "securityVulnerabilities",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   true,
					},
					{
						Name:      "serviceUrl",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "whitesourceServiceUrl"},{Name: "whitesource/serviceUrl", Deprecated: true},},
						Default:   `https://saas.whitesourcesoftware.com/api`,
					},
					{
						Name:      "timeout",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "int",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   900,
					},
					{
						Name:      "userToken",
						ResourceRef: []config.ResourceReference{
							{
								Name:"userTokenCredentialsId",
								Type: "secret",
							},
                        
							{
								Name:"whitesourceVaultSecret",
								Type: "vaultSecret",
								Default: "whitesource",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_userToken"),
					},
					{
						Name:      "versioningModel",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS","GENERAL",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "defaultVersioningModel"},},
						Default:   `major`,
					},
					{
						Name:      "vulnerabilityReportFormat",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `xlsx`,
					},
					{
						Name:      "vulnerabilityReportTitle",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `WhiteSource Security Vulnerability Report`,
					},
					{
						Name:      "projectSettingsFile",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "maven/projectSettingsFile"},},
						Default:   os.Getenv("PIPER_projectSettingsFile"),
					},
					{
						Name:      "globalSettingsFile",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "maven/globalSettingsFile"},},
						Default:   os.Getenv("PIPER_globalSettingsFile"),
					},
					{
						Name:      "m2Path",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "maven/m2Path"},},
						Default:   os.Getenv("PIPER_m2Path"),
					},
					{
						Name:      "installArtifacts",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","STEPS","STAGES","PARAMETERS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   false,
					},
					{
						Name:      "defaultNpmRegistry",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","GENERAL","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "npm/defaultNpmRegistry"},},
						Default:   os.Getenv("PIPER_defaultNpmRegistry"),
					},
					{
						Name:      "githubToken",
						ResourceRef: []config.ResourceReference{
							{
								Name:"githubTokenCredentialsId",
								Type: "secret",
							},
                        
							{
								Name:"githubVaultSecretName",
								Type: "vaultSecret",
								Default: "github",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "access_token"},},
						Default:   os.Getenv("PIPER_githubToken"),
					},
					{
						Name:      "createResultIssue",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "custom/isOptimizedAndScheduled",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   false,
					},
					{
						Name:      "githubApiUrl",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `https://api.github.com`,
					},
					{
						Name:      "owner",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "github/owner",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "githubOrg"},},
						Default:   os.Getenv("PIPER_owner"),
					},
					{
						Name:      "repository",
						ResourceRef: []config.ResourceReference{
							{
								Name:"commonPipelineEnvironment",
								Param: "github/repository",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{{Name: "githubRepo"},},
						Default:   os.Getenv("PIPER_repository"),
					},
					{
						Name:      "assignees",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"PARAMETERS","STAGES","STEPS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{``},
					},
					{
						Name:      "customTlsCertificateLinks",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "[]string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   []string{},
					},
					{
						Name:      "privateModules",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"GENERAL","STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_privateModules"),
					},
					{
						Name:      "privateModulesGitToken",
						ResourceRef: []config.ResourceReference{
							{
								Name:"golangPrivateModulesGitTokenCredentialsId",
								Param: "password",
								Type: "secret",
							},
                        
							{
								Name:"golangPrivateModulesGitTokenVaultSecret",
								Type: "vaultSecret",
								Default: "golang",
							},
                        },
						Scope:     []string{"GENERAL","PARAMETERS","STAGES","STEPS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_privateModulesGitToken"),
					},
				},
			},
			Containers: []config.Container{
				{Image: "buildpack-deps:stretch-curl",WorkingDir: "/tmp",Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "buildTool", Value: "dub" },  { Name: "buildTool", Value: "docker" }, } }, },
				}, 
				{Image: "devxci/mbtci-java11-node14",WorkingDir: "/home/mta",Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "buildTool", Value: "mta" }, } }, },
				}, 
				{Image: "golang:1",WorkingDir: "/go",Options: []config.Option{ {Name: "-u", Value: "0"}, },Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "buildTool", Value: "golang" }, } }, },
				}, 
				{Image: "gradle",WorkingDir: "/home/gradle",Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "buildTool", Value: "gradle" }, } }, },
				}, 
				{Image: "hseeberger/scala-sbt:8u181_2.12.8_1.2.8",WorkingDir: "/tmp",Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "buildTool", Value: "sbt" }, } }, },
				}, 
				{Image: "maven:3.5-jdk-8",WorkingDir: "/tmp",Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "buildTool", Value: "maven" }, } }, },
				}, 
				{Image: "node:lts-buster",WorkingDir: "/home/node",Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "buildTool", Value: "npm" }, } }, },
				}, 
				{Image: "python:3.6-stretch",WorkingDir: "/tmp",Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "buildTool", Value: "pip" }, } }, },
				}, 
				{Image: "node:lts-buster",WorkingDir: "/home/node",Conditions: []config.Condition{ {ConditionRef: "strings-equal", Params: []config.Param{ { Name: "buildTool", Value: "yarn" }, } }, },
				}, 
			},
			Outputs: config.StepOutputs{
				Resources: []config.StepResources{
					{
						Name: "commonPipelineEnvironment",
						Type: "piperEnvironment",
						Parameters: []map[string]interface{}{
							{"name": "custom/whitesourceProjectNames","type": "[]string",},
						},
					},
					{
						Name: "influx",
						Type: "influx",
						Parameters: []map[string]interface{}{
							{"name": "step_data","fields": []map[string]string{ {"name": "whitesource"}, },},
							{"name": "whitesource_data","fields": []map[string]string{ {"name": "vulnerabilities"},  {"name": "major_vulnerabilities"},  {"name": "minor_vulnerabilities"},  {"name": "policy_violations"}, },},
						},
					},
					{
						Name: "reports",
						Type: "reports",
						Parameters: []map[string]interface{}{
							{"filePattern": "**/whitesource-ip.json","type": "whitesource-ip",},
							{"filePattern": "**/*risk-report.pdf","type": "whitesource-ip",},
							{"filePattern": "**/toolrun_whitesource_*.json","type": "whitesource-ip",},
							{"filePattern": "**/piper_whitesource_vulnerability_report.html","type": "whitesource-security",},
							{"filePattern": "**/*risk-report.pdf","type": "whitesource-security",},
							{"filePattern": "**/toolrun_whitesource_*.json","type": "whitesource-security",},
							{"filePattern": "**/piper_whitesource_vulnerability.sarif","type": "whitesource-security",},
							{"filePattern": "**/piper_whitesource_sbom.xml","type": "whitesource-security",},
						},
					},
				},
			},
		},
	}
	return theMetaData
}
