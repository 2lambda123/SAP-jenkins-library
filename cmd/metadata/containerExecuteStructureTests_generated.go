// Code generated by piper's step-generator. DO NOT EDIT.

package metadata

import (
	"os"
	"github.com/SAP/jenkins-library/pkg/config"
)

// retrieve step metadata
func ContainerExecuteStructureTestsMetadata() config.StepData {
	var theMetaData = config.StepData{
		Metadata: config.StepMetadata{
			Name:    "containerExecuteStructureTests",
			Aliases: []config.Alias{},
			Description: "In this step [Container Structure Tests](https://github.com/GoogleContainerTools/container-structure-test) are executed.",
		},
		Spec: config.StepSpec{
			Inputs: config.StepInputs{
				Parameters: []config.StepParameters{
					{
						Name:      "pullImage",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "bool",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   false,
					},
					{
						Name:      "testConfiguration",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_testConfiguration"),
					},
					{
						Name:      "testDriver",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_testDriver"),
					},
					{
						Name:      "testImage",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: true,
						Aliases:   []config.Alias{},
						Default:   os.Getenv("PIPER_testImage"),
					},
					{
						Name:      "testReportFilePath",
						ResourceRef: []config.ResourceReference{},
						Scope:     []string{"STEPS","STAGES","PARAMETERS",},
						Type:      "string",
						Mandatory: false,
						Aliases:   []config.Alias{},
						Default:   `cst-report.json`,
					},
				},
			},
			Containers: []config.Container{
				{Image: "gcr.io/gcp-runtimes/container-structure-test:debug",Options: []config.Option{ {Name: "-u", Value: "0"},  {Name: "--entrypoint", Value: ""}, },
				}, 
			},
			
		},
	}
	return theMetaData
}
