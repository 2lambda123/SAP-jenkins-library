name: Publish master branch binary

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v1
        with:
          go-version: '1.18.x'
      - uses: SAP/project-piper-action@master
        with:
          piper-version: master
          command: golangBuild
          # ToDo: also perform testing (unit & integration) as well as coverage
          # this also allows to exclude coverage for generated files
          flags: --runTests=false --output piper_master --targetArchitectures "linux,amd64","darwin,amd64", "windows,amd64" --ldflagsTemplate "-w -s -X github.com/SAP/jenkins-library/cmd.GitCommit=${GITHUB_SHA} -X github.com/SAP/jenkins-library/pkg/log.LibraryRepository=${GITHUB_REPOSITORY} -X github.com/SAP/jenkins-library/pkg/telemetry.LibraryRepository=https://github.com/${GITHUB_REPOSITORY}.git"
      - run: |
          sh "mv piper_master-linux.amd64 piper_master"
          sh "mv piper_master-darwin.amd64 piper_master-darwin.x86_64"
          sh "mv piper_master-windows.amd64.exe piper_master-win.x86_64.exe"
      - uses: SAP/project-piper-action@master
        with:
          piper-version: master
          command: githubPublishRelease
          flags: --token ${{ secrets.GITHUB_TOKEN }} --version latest --assetPath ./piper_master
      - uses: SAP/project-piper-action@master
        with:
          piper-version: master
          command: githubPublishRelease
          flags: --token ${{ secrets.GITHUB_TOKEN }} --version latest --assetPath ./piper_master-darwin.x86_64
      - uses: SAP/project-piper-action@master
        with:
          piper-version: master
          command: githubPublishRelease
          flags: --token ${{ secrets.GITHUB_TOKEN }} --version latest --assetPath ./piper_master-win.x86_64.exe
